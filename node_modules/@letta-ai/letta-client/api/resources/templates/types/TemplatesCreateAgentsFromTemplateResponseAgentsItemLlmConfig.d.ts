/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Letta from "../../../index";
export interface TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfig {
    model: string;
    displayName?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigDisplayName;
    modelEndpointType: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigModelEndpointType;
    modelEndpoint?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigModelEndpoint;
    providerName?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigProviderName;
    providerCategory?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigProviderCategory;
    modelWrapper?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigModelWrapper;
    contextWindow: number;
    putInnerThoughtsInKwargs?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigPutInnerThoughtsInKwargs;
    handle?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigHandle;
    temperature?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigTemperature;
    maxTokens?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigMaxTokens;
    enableReasoner?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigEnableReasoner;
    reasoningEffort?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigReasoningEffort;
    maxReasoningTokens?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigMaxReasoningTokens;
    frequencyPenalty?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigFrequencyPenalty;
    compatibilityType?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigCompatibilityType;
    verbosity?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigVerbosity;
    tier?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigTier;
    parallelToolCalls?: Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemLlmConfigParallelToolCalls;
}
