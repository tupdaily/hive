/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Letta from "../../../../index";
/**
 * @example
 *     {
 *         agentId: "agent_id",
 *         background: true,
 *         stopReason: "end_turn",
 *         before: "before",
 *         after: "after",
 *         limit: 1,
 *         order: "asc",
 *         orderBy: "created_at",
 *         active: true,
 *         ascending: true
 *     }
 */
export interface RunsListRequest {
    /**
     * The unique identifier of the agent associated with the run.
     */
    agentId?: string;
    /**
     * The unique identifiers of the agents associated with the run. Deprecated in favor of agent_id field.
     */
    agentIds?: string | string[];
    /**
     * Filter runs by status. Can specify multiple statuses.
     */
    statuses?: string | string[];
    /**
     * If True, filters for runs that were created in background mode.
     */
    background?: boolean;
    /**
     * Filter runs by stop reason.
     */
    stopReason?: Letta.StopReasonType;
    /**
     * Run ID cursor for pagination. Returns runs that come before this run ID in the specified sort order
     */
    before?: string;
    /**
     * Run ID cursor for pagination. Returns runs that come after this run ID in the specified sort order
     */
    after?: string;
    /**
     * Maximum number of runs to return
     */
    limit?: number;
    /**
     * Sort order for runs by creation time. 'asc' for oldest first, 'desc' for newest first
     */
    order?: Letta.RunsListRequestOrder;
    /**
     * Field to sort by
     */
    orderBy?: "created_at";
    /**
     * Filter for active runs.
     */
    active?: boolean;
    /**
     * Whether to sort agents oldest to newest (True) or newest to oldest (False, default). Deprecated in favor of order field.
     */
    ascending?: boolean;
}
