/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Letta from "../../../../index";
/**
 * @example
 *     {
 *         label: "label",
 *         templatesOnly: true,
 *         name: "name",
 *         identityId: "identity_id",
 *         projectId: "project_id",
 *         limit: 1,
 *         before: "before",
 *         after: "after",
 *         order: "asc",
 *         orderBy: "created_at",
 *         labelSearch: "label_search",
 *         descriptionSearch: "description_search",
 *         valueSearch: "value_search",
 *         connectedToAgentsCountGt: 1,
 *         connectedToAgentsCountLt: 1
 *     }
 */
export interface BlocksListRequest {
    /**
     * Labels to include (e.g. human, persona)
     */
    label?: string;
    /**
     * Whether to include only templates
     */
    templatesOnly?: boolean;
    /**
     * Name of the block
     */
    name?: string;
    /**
     * Search agents by identifier id
     */
    identityId?: string;
    /**
     * Search agents by identifier keys
     */
    identifierKeys?: string | string[];
    /**
     * Search blocks by project id
     */
    projectId?: string;
    /**
     * Number of blocks to return
     */
    limit?: number;
    /**
     * Block ID cursor for pagination. Returns blocks that come before this block ID in the specified sort order
     */
    before?: string;
    /**
     * Block ID cursor for pagination. Returns blocks that come after this block ID in the specified sort order
     */
    after?: string;
    /**
     * Sort order for blocks by creation time. 'asc' for oldest first, 'desc' for newest first
     */
    order?: Letta.BlocksListRequestOrder;
    /**
     * Field to sort by
     */
    orderBy?: "created_at";
    /**
     * Search blocks by label. If provided, returns blocks that match this label. This is a full-text search on labels.
     */
    labelSearch?: string;
    /**
     * Search blocks by description. If provided, returns blocks that match this description. This is a full-text search on block descriptions.
     */
    descriptionSearch?: string;
    /**
     * Search blocks by value. If provided, returns blocks that match this value.
     */
    valueSearch?: string;
    /**
     * Filter blocks by the number of connected agents. If provided, returns blocks that have more than this number of connected agents.
     */
    connectedToAgentsCountGt?: number;
    /**
     * Filter blocks by the number of connected agents. If provided, returns blocks that have less than this number of connected agents.
     */
    connectedToAgentsCountLt?: number;
    /**
     * Filter blocks by the exact number of connected agents. If provided, returns blocks that have exactly this number of connected agents.
     */
    connectedToAgentsCountEq?: number | number[];
}
