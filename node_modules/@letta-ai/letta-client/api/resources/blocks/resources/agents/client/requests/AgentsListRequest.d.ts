/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Letta from "../../../../../../index";
/**
 * @example
 *     {
 *         before: "before",
 *         after: "after",
 *         limit: 1,
 *         order: "asc",
 *         orderBy: "created_at"
 *     }
 */
export interface AgentsListRequest {
    /**
     * Agent ID cursor for pagination. Returns agents that come before this agent ID in the specified sort order
     */
    before?: string;
    /**
     * Agent ID cursor for pagination. Returns agents that come after this agent ID in the specified sort order
     */
    after?: string;
    /**
     * Maximum number of agents to return
     */
    limit?: number;
    /**
     * Sort order for agents by creation time. 'asc' for oldest first, 'desc' for newest first
     */
    order?: Letta.blocks.AgentsListRequestOrder;
    /**
     * Field to sort by
     */
    orderBy?: "created_at";
    /**
     * Specify which relational fields (e.g., 'tools', 'sources', 'memory') to include in the response. If not provided, all relationships are loaded by default. Using this can optimize performance by reducing unnecessary joins.
     */
    includeRelationships?: string | string[];
}
