"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContextWindowOverview = void 0;
const core = __importStar(require("../../core"));
const FunctionTool_1 = require("./FunctionTool");
const Message_1 = require("./Message");
exports.ContextWindowOverview = core.serialization.object({
    contextWindowSizeMax: core.serialization.property("context_window_size_max", core.serialization.number()),
    contextWindowSizeCurrent: core.serialization.property("context_window_size_current", core.serialization.number()),
    numMessages: core.serialization.property("num_messages", core.serialization.number()),
    numArchivalMemory: core.serialization.property("num_archival_memory", core.serialization.number()),
    numRecallMemory: core.serialization.property("num_recall_memory", core.serialization.number()),
    numTokensExternalMemorySummary: core.serialization.property("num_tokens_external_memory_summary", core.serialization.number()),
    externalMemorySummary: core.serialization.property("external_memory_summary", core.serialization.string()),
    numTokensSystem: core.serialization.property("num_tokens_system", core.serialization.number()),
    systemPrompt: core.serialization.property("system_prompt", core.serialization.string()),
    numTokensCoreMemory: core.serialization.property("num_tokens_core_memory", core.serialization.number()),
    coreMemory: core.serialization.property("core_memory", core.serialization.string()),
    numTokensSummaryMemory: core.serialization.property("num_tokens_summary_memory", core.serialization.number()),
    summaryMemory: core.serialization.property("summary_memory", core.serialization.string().optional()),
    numTokensFunctionsDefinitions: core.serialization.property("num_tokens_functions_definitions", core.serialization.number()),
    functionsDefinitions: core.serialization.property("functions_definitions", core.serialization.list(FunctionTool_1.FunctionTool).optional()),
    numTokensMessages: core.serialization.property("num_tokens_messages", core.serialization.number()),
    messages: core.serialization.list(Message_1.Message),
});
