/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../../index";
import * as Letta from "../../../../../api/index";
import * as core from "../../../../../core";
import { ChatCompletionRequestMessagesItem } from "../../types/ChatCompletionRequestMessagesItem";
import { ChatCompletionRequestStop } from "../../types/ChatCompletionRequestStop";
export declare const ChatCompletionRequest: core.serialization.Schema<serializers.ChatCompletionRequest.Raw, Letta.ChatCompletionRequest>;
export declare namespace ChatCompletionRequest {
    interface Raw {
        model: string;
        messages: ChatCompletionRequestMessagesItem.Raw[];
        temperature?: number | null;
        top_p?: number | null;
        n?: number | null;
        stream?: boolean | null;
        stop?: ChatCompletionRequestStop.Raw | null;
        max_tokens?: number | null;
        presence_penalty?: number | null;
        frequency_penalty?: number | null;
        user?: string | null;
    }
}
