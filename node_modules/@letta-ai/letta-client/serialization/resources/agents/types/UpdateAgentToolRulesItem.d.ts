/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../index";
import * as Letta from "../../../../api/index";
import * as core from "../../../../core";
import { ConditionalToolRule } from "../../../types/ConditionalToolRule";
import { ChildToolRule } from "../../../types/ChildToolRule";
import { ContinueToolRule } from "../../../types/ContinueToolRule";
import { TerminalToolRule } from "../../../types/TerminalToolRule";
import { MaxCountPerStepToolRule } from "../../../types/MaxCountPerStepToolRule";
import { ParentToolRule } from "../../../types/ParentToolRule";
import { RequiredBeforeExitToolRule } from "../../../types/RequiredBeforeExitToolRule";
import { RequiresApprovalToolRule } from "../../../types/RequiresApprovalToolRule";
import { InitToolRule } from "../../../types/InitToolRule";
export declare const UpdateAgentToolRulesItem: core.serialization.Schema<serializers.UpdateAgentToolRulesItem.Raw, Letta.UpdateAgentToolRulesItem>;
export declare namespace UpdateAgentToolRulesItem {
    type Raw = ConditionalToolRule.Raw | ChildToolRule.Raw | ContinueToolRule.Raw | TerminalToolRule.Raw | MaxCountPerStepToolRule.Raw | ParentToolRule.Raw | RequiredBeforeExitToolRule.Raw | RequiresApprovalToolRule.Raw | InitToolRule.Raw;
}
