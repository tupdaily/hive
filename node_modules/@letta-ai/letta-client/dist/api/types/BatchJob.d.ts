/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Letta from "../index";
export interface BatchJob {
    /** The id of the user that made this object. */
    createdById?: string;
    /** The id of the user that made this object. */
    lastUpdatedById?: string;
    /** The unix timestamp of when the job was created. */
    createdAt?: Date;
    /** The timestamp when the object was last updated. */
    updatedAt?: Date;
    /** The status of the job. */
    status?: Letta.JobStatus;
    /** The unix timestamp of when the job was completed. */
    completedAt?: Date;
    /** The reason why the job was stopped. */
    stopReason?: Letta.StopReasonType;
    /** The metadata of the job. */
    metadata?: Record<string, unknown>;
    jobType?: Letta.JobType;
    /** Whether the job was created in background mode. */
    background?: boolean;
    /** The agent associated with this job/run. */
    agentId?: string;
    /** If set, POST to this URL when the job completes. */
    callbackUrl?: string;
    /** Timestamp when the callback was last attempted. */
    callbackSentAt?: Date;
    /** HTTP status code returned by the callback endpoint. */
    callbackStatusCode?: number;
    /** Optional error message from attempting to POST the callback endpoint. */
    callbackError?: string;
    /** Time to first token for a run in nanoseconds */
    ttftNs?: number;
    /** Total run duration in nanoseconds */
    totalDurationNs?: number;
    /** The human-friendly ID of the Job */
    id?: string;
}
