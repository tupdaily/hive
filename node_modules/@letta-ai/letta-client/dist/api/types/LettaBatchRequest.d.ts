/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Letta from "../index";
export interface LettaBatchRequest {
    /** The messages to be sent to the agent. */
    messages: Letta.LettaBatchRequestMessagesItem[];
    /** Maximum number of steps the agent should take to process the request. */
    maxSteps?: number;
    /** Whether the server should parse specific tool call arguments (default `send_message`) as `AssistantMessage` objects. */
    useAssistantMessage?: boolean;
    /** The name of the designated message tool. */
    assistantMessageToolName?: string;
    /** The name of the message argument in the designated message tool. */
    assistantMessageToolKwarg?: string;
    /** Only return specified message types in the response. If `None` (default) returns all messages. */
    includeReturnMessageTypes?: Letta.MessageType[];
    /** If set to True, enables reasoning before responses or tool calls from the agent. */
    enableThinking?: string;
    /** The ID of the agent to send this batch request for */
    agentId: string;
}
