/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Letta from "../../../../index";
/**
 * @example
 *     {
 *         before: "before",
 *         after: "after",
 *         limit: 1,
 *         order: "asc",
 *         orderBy: "created_at",
 *         startDate: "start_date",
 *         endDate: "end_date",
 *         model: "model",
 *         agentId: "agent_id",
 *         feedback: "positive",
 *         hasFeedback: true,
 *         projectId: "project_id"
 *     }
 */
export interface StepsListRequest {
    /**
     * Return steps before this step ID
     */
    before?: string;
    /**
     * Return steps after this step ID
     */
    after?: string;
    /**
     * Maximum number of steps to return
     */
    limit?: number;
    /**
     * Sort order for steps by creation time. 'asc' for oldest first, 'desc' for newest first
     */
    order?: Letta.StepsListRequestOrder;
    /**
     * Field to sort by
     */
    orderBy?: "created_at";
    /**
     * Return steps after this ISO datetime (e.g. "2025-01-29T15:01:19-08:00")
     */
    startDate?: string;
    /**
     * Return steps before this ISO datetime (e.g. "2025-01-29T15:01:19-08:00")
     */
    endDate?: string;
    /**
     * Filter by the name of the model used for the step
     */
    model?: string;
    /**
     * Filter by the ID of the agent that performed the step
     */
    agentId?: string;
    /**
     * Filter by trace ids returned by the server
     */
    traceIds?: string | string[];
    /**
     * Filter by feedback
     */
    feedback?: Letta.StepsListRequestFeedback;
    /**
     * Filter by whether steps have feedback (true) or not (false)
     */
    hasFeedback?: boolean;
    /**
     * Filter by tags
     */
    tags?: string | string[];
    /**
     * Filter by the project ID that is associated with the step (cloud only).
     */
    projectId?: string;
}
