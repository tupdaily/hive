/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { ConditionalToolRule } from "./ConditionalToolRule";
import { ChildToolRule } from "./ChildToolRule";
import { ContinueToolRule } from "./ContinueToolRule";
import { TerminalToolRule } from "./TerminalToolRule";
import { MaxCountPerStepToolRule } from "./MaxCountPerStepToolRule";
import { ParentToolRule } from "./ParentToolRule";
import { RequiredBeforeExitToolRule } from "./RequiredBeforeExitToolRule";
import { RequiresApprovalToolRule } from "./RequiresApprovalToolRule";
import { InitToolRule } from "./InitToolRule";
export declare const LettaSchemasAgentFileAgentSchemaToolRulesItem: core.serialization.Schema<serializers.LettaSchemasAgentFileAgentSchemaToolRulesItem.Raw, Letta.LettaSchemasAgentFileAgentSchemaToolRulesItem>;
export declare namespace LettaSchemasAgentFileAgentSchemaToolRulesItem {
    type Raw = ConditionalToolRule.Raw | ChildToolRule.Raw | ContinueToolRule.Raw | TerminalToolRule.Raw | MaxCountPerStepToolRule.Raw | ParentToolRule.Raw | RequiredBeforeExitToolRule.Raw | RequiresApprovalToolRule.Raw | InitToolRule.Raw;
}
