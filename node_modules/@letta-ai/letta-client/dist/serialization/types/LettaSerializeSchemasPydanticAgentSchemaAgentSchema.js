"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.LettaSerializeSchemasPydanticAgentSchemaAgentSchema = void 0;
const core = __importStar(require("../../core"));
const CoreMemoryBlockSchema_1 = require("./CoreMemoryBlockSchema");
const EmbeddingConfig_1 = require("./EmbeddingConfig");
const LlmConfig_1 = require("./LlmConfig");
const LettaSerializeSchemasPydanticAgentSchemaMessageSchema_1 = require("./LettaSerializeSchemasPydanticAgentSchemaMessageSchema");
const TagSchema_1 = require("./TagSchema");
const ToolEnvVarSchema_1 = require("./ToolEnvVarSchema");
const LettaSerializeSchemasPydanticAgentSchemaAgentSchemaToolRulesItem_1 = require("./LettaSerializeSchemasPydanticAgentSchemaAgentSchemaToolRulesItem");
const LettaSerializeSchemasPydanticAgentSchemaToolSchema_1 = require("./LettaSerializeSchemasPydanticAgentSchemaToolSchema");
exports.LettaSerializeSchemasPydanticAgentSchemaAgentSchema = core.serialization.object({
    agentType: core.serialization.property("agent_type", core.serialization.string()),
    coreMemory: core.serialization.property("core_memory", core.serialization.list(CoreMemoryBlockSchema_1.CoreMemoryBlockSchema)),
    createdAt: core.serialization.property("created_at", core.serialization.string()),
    description: core.serialization.string().optional(),
    embeddingConfig: core.serialization.property("embedding_config", EmbeddingConfig_1.EmbeddingConfig),
    llmConfig: core.serialization.property("llm_config", LlmConfig_1.LlmConfig),
    messageBufferAutoclear: core.serialization.property("message_buffer_autoclear", core.serialization.boolean()),
    inContextMessageIndices: core.serialization.property("in_context_message_indices", core.serialization.list(core.serialization.number())),
    messages: core.serialization.list(LettaSerializeSchemasPydanticAgentSchemaMessageSchema_1.LettaSerializeSchemasPydanticAgentSchemaMessageSchema),
    metadata: core.serialization.property("metadata_", core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()),
    multiAgentGroup: core.serialization.property("multi_agent_group", core.serialization.unknown()),
    name: core.serialization.string(),
    system: core.serialization.string(),
    tags: core.serialization.list(TagSchema_1.TagSchema),
    toolExecEnvironmentVariables: core.serialization.property("tool_exec_environment_variables", core.serialization.list(ToolEnvVarSchema_1.ToolEnvVarSchema)),
    toolRules: core.serialization.property("tool_rules", core.serialization.list(LettaSerializeSchemasPydanticAgentSchemaAgentSchemaToolRulesItem_1.LettaSerializeSchemasPydanticAgentSchemaAgentSchemaToolRulesItem)),
    tools: core.serialization.list(LettaSerializeSchemasPydanticAgentSchemaToolSchema_1.LettaSerializeSchemasPydanticAgentSchemaToolSchema),
    updatedAt: core.serialization.property("updated_at", core.serialization.string()),
    version: core.serialization.string(),
});
